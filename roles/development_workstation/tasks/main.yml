---
- name: Install zsh
  become: true
  ansible.builtin.package:
    name: zsh
    state: present

- name: Set default shell to zsh
  become: true
  ansible.builtin.user:
    name: "{{ local_user }}"
    shell: /usr/bin/zsh

- name: Disable stupid ls colors
  become: true
  ansible.builtin.copy:
    dest: /etc/profile.d/colorls.sh
    content: ""
    mode: 0644
  when: ansible_facts["os_family"] == "RedHat"

- name: Increase default user watches limit
  become: true
  ansible.builtin.lineinfile:
    line: fs.inotify.max_user_watches=524288
    dest: /etc/sysctl.conf

- name: Create directory for third-party software sources
  ansible.builtin.file:
    path: "{{ third_party_src }}"
    state: directory
    mode: 0755

- name: Create local bin directory
  ansible.builtin.file:
    path: "{{ home }}/bin"
    state: directory
    mode: 0755

- name: Install C toolchain
  become: true
  ansible.builtin.dnf:
    name: "@C Development Tools and Libraries"
    state: present
  when: ansible_facts["distribution"] == "Fedora"

- name: Install C toolchain
  become: true
  ansible.builtin.apt:
    name: build-essential
    state: present
  when: ansible_facts["distribution"] == "Ubuntu"

- name: Install some development tools and libraries
  become: true
  ansible.builtin.dnf:
    name:
      - ImageMagick
      - ImageMagick-devel
      - autoconf
      - automake
      - git
      - inotify-tools
      - jq
      - libffi-devel
      - libtool
      - libxslt-devel
      - libyaml-devel
      - ncurses-devel
      - nmap
      - openssl
      - openssl-devel
      - optipng
      - pwgen
      - readline-devel
      - ruby-devel
      - sqlite-devel
      - postgresql
      - tmux
      - unixODBC-devel
      - whois
      - wxBase3
      - wxGTK3-devel
      - rclone
    state: present
  when: ansible_facts["os_family"] == "RedHat"

- name: Install some development tools and libraries
  become: true
  ansible.builtin.dnf:
    name:
      - ShellCheck
      - entr
      - ripgrep
      - htop
      - perf
      - strace
      - exa
    state: present
  when: ansible_facts["distribution"] == "Fedora"

- name: Install some development tools and libraries
  become: true
  ansible.builtin.apt:
    name:
      - autoconf
      - automake
      - curl
      - entr
      - ethtool
      - git
      - git-doc
      - imagemagick
      - inotify-tools
      - jq
      - libffi-dev
      - libgl1-mesa-dev
      - libglu1-mesa-dev
      - libmagickwand-dev
      - libncurses5-dev
      - libpng-dev
      - libpq-dev
      - libreadline-dev
      - libsqlite3-dev
      - libssl-dev
      - libtool
      - libwxgtk3.0-gtk3-dev
      - libxslt-dev
      - libyaml-dev
      - nmap
      - optipng
      - pwgen
      - tree
      - ruby-dev
      - shellcheck
      - ripgrep
      - sqlite3
      - tmux
      - unixodbc-dev
      - whois
      - postgresql-client
      - rclone
    state: present
  when: ansible_facts["os_family"] == "Debian"

- name: Install system visibility tools
  become: true
  ansible.builtin.dnf:
    name:
      - htop
      - perf
      - strace
    state: present
  when: ansible_facts["os_family"] == "RedHat"

- name: Install system visibility tools
  become: true
  ansible.builtin.apt:
    name:
      - dstat
      - htop
      - strace
    state: present
  when: ansible_facts["os_family"] == "Debian"

- name: Install perf
  become: true
  ansible.builtin.apt:
    name: linux-perf
  when: ansible_facts["distribution"] == "Debian"

- name: Install perf
  become: true
  ansible.builtin.apt:
    name: linux-tools-generic
  when: ansible_facts["distribution"] == "Ubuntu"

- name: Install gawk
  become: true
  ansible.builtin.apt:
    name: gawk
    state: present
  when: ansible_facts["os_family"] == "Debian"

- name: Ensure we're using gawk
  become: true
  community.general.alternatives:
    name: awk
    path: /usr/bin/gawk
  when: ansible_facts["os_family"] == "Debian"

- ansible.builtin.import_tasks: neovim.yml
- ansible.builtin.import_tasks: redis.yml
- ansible.builtin.import_tasks: fzy.yml
- ansible.builtin.import_tasks: asdf.yml
- ansible.builtin.import_tasks: python.yml
- ansible.builtin.import_tasks: java.yml
- ansible.builtin.import_tasks: redhat.yml
- ansible.builtin.import_tasks: azure.yml
- ansible.builtin.import_tasks: fd.yml
- ansible.builtin.import_tasks: go-task.yml
- ansible.builtin.import_tasks: dotfiles.yml
