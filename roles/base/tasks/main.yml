---
# Since ansible_user_id will be `root` if we `become: yes`, this caches the
# unprivileged user in a fact for us to use everywhere.
- name: Get local username
  ansible.builtin.set_fact:
    local_user: "{{ ansible_user_id }}"

- name: Get home directory path
  ansible.builtin.set_fact:
    home: "{{ lookup('env', 'HOME') }}"

- name: Enable fastest mirror dnf plugin
  become: true
  ansible.builtin.lineinfile:
    line: fastestmirror=1
    dest: /etc/dnf/dnf.conf
  when: ansible_facts["os_family"] == "RedHat"

- name: Enable RPMFusion free
  become: true
  ansible.builtin.dnf:
    name:
      - https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_facts["distribution_major_version"] }}.noarch.rpm
      - https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_facts["distribution_major_version"] }}.noarch.rpm
    disable_gpg_check: true
    state: present
  when: ansible_facts["distribution"] == "Fedora"

- name: Install base system software
  become: true
  ansible.builtin.apt:
    name:
      - rsync
      - openssh-server
      - gnupg
      - apt-transport-https
    state: present
  when: ansible_facts["os_family"] == "Debian"

- name: Enable sshd
  ansible.builtin.service:
    name: sshd
    state: started
    enabled: true
  become: true
  when: skip_services is not defined and ansible_facts["os_family"] == "RedHat"

- name: Enable ssh
  ansible.builtin.service:
    name: ssh
    state: started
    enabled: true
  become: true
  when: skip_services is not defined and ansible_facts["os_family"] == "Debian"

- name: Install fwupd for firmware update support
  become: true
  ansible.builtin.dnf:
    name: fwupd
    state: present
  when: ansible_facts["os_family"] == "RedHat"
